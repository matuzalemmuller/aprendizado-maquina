import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics

# https://stackoverflow.com/questions/24251219/pandas-read-csv-low-memory-and-dtype-options
data_file = "data/enem_data.csv"

data_type = {
        'NU_INSCRICAO': int,
        'NU_ANO': int,
        'CO_MUNICIPIO_RESIDENCIA': int,
        'NO_MUNICIPIO_RESIDENCIA': object,
        'CO_UF_RESIDENCIA': int,
        'SG_UF_RESIDENCIA': object,
        'NU_IDADE': float,
        'TP_SEXO': object,
        'TP_ESTADO_CIVIL': float,
        'TP_COR_RACA': int,
        'TP_NACIONALIDADE': int,
        'CO_MUNICIPIO_NASCIMENTO': float,
        'NO_MUNICIPIO_NASCIMENTO': object,
        'CO_UF_NASCIMENTO': float,
        'SG_UF_NASCIMENTO': object,
        'TP_ST_CONCLUSAO': int,
        'TP_ANO_CONCLUIU': int,
        'TP_ESCOLA': int,
        'TP_ENSINO': float,
        'IN_TREINEIRO': int,
        'CO_ESCOLA': float,
        'CO_MUNICIPIO_ESC': float,
        'NO_MUNICIPIO_ESC': object,
        'CO_UF_ESC': float,
        'SG_UF_ESC': object,
        'TP_DEPENDENCIA_ADM_ESC': float,
        'TP_LOCALIZACAO_ESC': float,
        'TP_SIT_FUNC_ESC': float,
        'IN_BAIXA_VISAO': int,
        'IN_CEGUEIRA': int,
        'IN_SURDEZ': int,
        'IN_DEFICIENCIA_AUDITIVA': int,
        'IN_SURDO_CEGUEIRA': int,
        'IN_DEFICIENCIA_FISICA': int,
        'IN_DEFICIENCIA_MENTAL': int,
        'IN_DEFICIT_ATENCAO': int,
        'IN_DISLEXIA': int,
        'IN_DISCALCULIA': int,
        'IN_AUTISMO': int,
        'IN_VISAO_MONOCULAR': int,
        'IN_OUTRA_DEF': int,
        'IN_SABATISTA': int,
        'IN_GESTANTE': int,
        'IN_LACTANTE': int,
        'IN_IDOSO': int,
        'IN_ESTUDA_CLASSE_HOSPITALAR': int,
        'IN_SEM_RECURSO': int,
        'IN_BRAILLE': int,
        'IN_AMPLIADA_24': int,
        'IN_AMPLIADA_18': int,
        'IN_LEDOR': int,
        'IN_ACESSO': int,
        'IN_TRANSCRICAO': int,
        'IN_LIBRAS': int,
        'IN_LEITURA_LABIAL': int,
        'IN_MESA_CADEIRA_RODAS': int,
        'IN_MESA_CADEIRA_SEPARADA': int,
        'IN_APOIO_PERNA': int,
        'IN_GUIA_INTERPRETE': int,
        'IN_MACA': int,
        'IN_COMPUTADOR': int,
        'IN_CADEIRA_ESPECIAL': int,
        'IN_CADEIRA_CANHOTO': int,
        'IN_CADEIRA_ACOLCHOADA': int,
        'IN_PROVA_DEITADO': int,
        'IN_MOBILIARIO_OBESO': int,
        'IN_LAMINA_OVERLAY': int,
        'IN_PROTETOR_AURICULAR': int,
        'IN_MEDIDOR_GLICOSE': int,
        'IN_MAQUINA_BRAILE': int,
        'IN_SOROBAN': int,
        'IN_MARCA_PASSO': int,
        'IN_SONDA': int,
        'IN_MEDICAMENTOS': int,
        'IN_SALA_INDIVIDUAL': int,
        'IN_SALA_ESPECIAL': int,
        'IN_SALA_ACOMPANHANTE': int,
        'IN_MOBILIARIO_ESPECIFICO': int,
        'IN_MATERIAL_ESPECIFICO': int,
        'IN_NOME_SOCIAL': int,
        'IN_CERTIFICADO': int,
        'NO_ENTIDADE_CERTIFICACAO': object,
        'CO_UF_ENTIDADE_CERTIFICACAO': float,
        'SG_UF_ENTIDADE_CERTIFICACAO': object,
        'CO_MUNICIPIO_PROVA': int,
        'NO_MUNICIPIO_PROVA': object,
        'CO_UF_PROVA': int,
        'SG_UF_PROVA': object,
        'TP_PRESENCA_CN': float,
        'TP_PRESENCA_CH': float,
        'TP_PRESENCA_LC': float,
        'TP_PRESENCA_MT': float,
        'CO_PROVA_CN': float,
        'CO_PROVA_CH': float,
        'CO_PROVA_LC': float,
        'CO_PROVA_MT': float,
        'NU_NOTA_CN': float,
        'NU_NOTA_CH': float,
        'NU_NOTA_LC': float,
        'NU_NOTA_MT': float,
        'TX_RESPOSTAS_CN': object,
        'TX_RESPOSTAS_CH': object,
        'TX_RESPOSTAS_LC': object,
        'TX_RESPOSTAS_MT': object,
        'TP_LINGUA': int,
        'TX_GABARITO_CN': object,
        'TX_GABARITO_CH': object,
        'TX_GABARITO_LC': object,
        'TX_GABARITO_MT': object,
        'TP_STATUS_REDACAO': float,
        'NU_NOTA_COMP1': float,
        'NU_NOTA_COMP2': float,
        'NU_NOTA_COMP3': float,
        'NU_NOTA_COMP4': float,
        'NU_NOTA_COMP5': float,
        'NU_NOTA_REDACAO': float,
        'Q001': object,
        'Q002': object,
        'Q003': object,
        'Q004': object,
        'Q005': object,
        'Q006': object,
        'Q007': object,
        'Q008': object,
        'Q009': object,
        'Q010': object,
        'Q011': object,
        'Q012': object,
        'Q013': object,
        'Q014': object,
        'Q015': object,
        'Q016': object,
        'Q017': object,
        'Q018': object,
        'Q019': object,
        'Q020': object,
        'Q021': object,
        'Q022': object,
        'Q023': object,
        'Q024': object,
        'Q025': object,
        'Q026': object,
        'Q027': object,
        'Q028': object,
        'Q029': object,
        'Q030': object,
        'Q031': object,
        'Q032': object,
        'Q033': object,
        'Q034': object,
        'Q035': object,
        'Q036': object,
        'Q037': object,
        'Q038': object,
        'Q039': object,
        'Q040': object,
        'Q041': object,
        'Q042': object,
        'Q043': object,
        'Q044': object,
        'Q045': object,
        'Q046': object,
        'Q047': object,
        'Q048': object,
        'Q049': object,
        'Q050': object
        }

# load dataset
data = pd.read_csv(data_file, dtype=data_type)
print(data.head())